name: "Release Binary"

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write  # 必须有这个权限才能创建release

jobs:
  build-tar-ball:
    name: "Build and Tar Ball"
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            artifact_name: "Node-OBA-Fix-linux-x64.tar.xz"

          - os: ubuntu-24.04-arm
            artifact_name: "Node-OBA-Fix-linux-arm64.tar.xz"  

          - os: macos-13
            artifact_name: "Node-OBA-Fix-macos-x64.tar.xz"

          - os: macos-14
            artifact_name: "Node-OBA-Fix-macos-arm64.tar.xz"            

          - os: windows-latest
            artifact_name: "Node-OBA-Fix-windows-x64.tar.gz"
                 
          # 自托管 runner, 构建 Onecloud ArmV7L 镜像
          #- os: self-hosted
          #  artifact_name: "Node-OBA-Fix-linux-armv7l.tar.xz"            

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - run: npm i --no-package-lock
      - run: npm run build

      ## Linux & MacOS Copy NodeJS
      - run: |
          cp $(which node) .
          cp platforms/linux/run.sh .
        if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos') || contains(matrix.os, 'self-hosted')

      ## Linux & MacOS Tar
      - run: |
          tar -caf ${{ matrix.artifact_name }} dist nginx package.json node_modules node run.sh
        if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos') || contains(matrix.os, 'self-hosted')

      ## Windows Copy NodeJS
      - run: |
          $SRC = (Get-Command node.exe).Path
          copy $SRC node.exe
          copy platforms/windows/run.ps1 .
        if: matrix.os == 'windows-latest'

      ## Windows Tar
      - run: |
          tar -caf ${{ matrix.artifact_name }} dist package.json node_modules node.exe run.ps1
        if: matrix.os == 'windows-latest'        

      - name: "Upload Artifact"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}

  build-update-zip:
    name: "Build Update Zip"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - run: npm i --no-package-lock
      - run: npm run build

      - name: "Create update.zip"
        run: |
          zip -r update.zip dist package.json

      - name: "Upload Artifact"
        uses: actions/upload-artifact@v4
        with:
          name: update
          path: update.zip

  upload-to-release:
    name: "Upload to Release"
    runs-on: ubuntu-latest
    needs: [build-tar-ball, build-update-zip]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整git历史记录

      - name: "Download Artifacts"
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: '*.tar.xz,*.tar.gz,*.zip'
          merge-multiple: true

      # 调试：列出下载的文件
      - name: "List Downloaded Artifacts"
        run: ls -R artifacts

      - name: "Generate Changelog"
        run: npx changelogithub-chinese

      - name: "Create Release"
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Pre-built binaries for all platforms:
            - Linux x64
            - Linux ARM64
            - Linux ARMv7
            - macOS x64
            - macOS ARM64
            - Windows x64
            - Update package
          files: |
            artifacts/Node-OBA-Fix-linux-x64.tar.xz
            artifacts/Node-OBA-Fix-linux-arm64.tar.xz
            artifacts/Node-OBA-Fix-macos-x64.tar.xz
            artifacts/Node-OBA-Fix-macos-arm64.tar.xz
            artifacts/Node-OBA-Fix-windows-x64.tar.gz
            artifacts/Node-OBA-Fix-linux-armv7l.tar.xz
            artifacts/update.zip
          token: ${{ secrets.GITHUB_TOKEN }}  # 显式传递 GITHUB_TOKEN